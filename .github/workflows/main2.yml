name : Main Crisis-center Workflow
on:
  push:
    branches:
      - main
#  pull_request:
#    types: [closed]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8==6.0.0
          pip install -r ./backend/requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8 --exclude=*/migrations/* backend/

  deploy:
    runs-on: ubuntu-latest
    needs:
      - tests

    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Display ssh-agent status
      run: ssh-add -l

    - name: Add known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan ${{ secrets.HOST }} >> ~/.ssh/known_hosts

    - name: Pull repo develop branch
      run: ssh ${{ secrets.HOST_USER }}@${{ secrets.HOST }} "cd nko && git pull"

    - name: Restart project using ssh
      run: |
        ssh ${{ secrets.HOST_USER }}@${{ secrets.HOST }} "cd nko && rm .env && touch .env && \
        echo SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env && \
        echo DEBUG=${{ secrets.DEBUG }} >> .env && \
        echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env && \
        echo CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }} >> .env && \
        echo CLOUDPAYMENTS_PUBLIC_ID=${{ secrets.CLOUDPAYMENTS_PUBLIC_ID }} >> .env && \
        echo CLOUDPAYMENTS_API_SECRET=${{ secrets.CLOUDPAYMENTS_API_SECRET }} >> .env && \
        echo CLOUDPAYMENTS_SUBSCRIPTION_FIND_URL=${{ secrets.CLOUDPAYMENTS_SUBSCRIPTION_FIND_URL }} >> .env && \
        echo CLOUDPAYMENTS_API_TEST_URL=${{ secrets.CLOUDPAYMENTS_API_TEST_URL }} >> .env && \
        echo UNISENDER_API_KEY=${{ secrets.UNISENDER_API_KEY }} >> .env && \
        echo UNISENDER_SENDER_NAME=${{ secrets.UNISENDER_SENDER_NAME }} >> .env && \
        echo DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }} >> .env && \
        echo REQUEST_URL=${{ secrets.REQUEST_URL }} >> .env && \
        echo TEMPLATE_ID=${{ secrets.TEMPLATE_ID }} >> .env && \
        cd backend && \
        python3 manage.py makemigrations && \
        python3 manage.py migrate && \
        gunicorn --bind 0.0.0.0:8000 donor_base.wsgi --reload"
